@inherits BaseComponent
@using MudBlazor
@using Hajir.Crm.Features.Products

<MudDialog>
    <TitleContent>
        <div class="title-container">
            ساخت bundle جدید
        </div>
    </TitleContent>
    <DialogContent>
        <div class="main-container">
            <div class="form-container">
                <MudAutocomplete T="Product"
                                 @bind-Value="this.BundleModel.UPS"
                                 SearchFunc="e=>SearchUps(new Input(e))"
                                 ToStringFunc="e=>ProductToString(e)"
                                 OnClearButtonClick="ClearUps"
                                 Label="مدل UPS"
                                 Placeholder="search a UPS model"
                                 OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                                 CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                                                  AutoFocus
                                                  Immediate
                                                  Clearable
                                                  ResetValueOnEmptyText
                                                  SelectValueOnTab>
                </MudAutocomplete>
                <MudCheckBox @bind-Checked="@HasBattery">باتری دارد؟</MudCheckBox>
                @if (HasBattery)
                {
                    <MudSelect T="int"
                           @bind-Value="this.BundleModel.NumberOfBatteries"
                           Disabled="@IsUpsEmpty"
                           OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                           CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                           Label="تعداد باتری">
                        @foreach (var i in GetSupportedNumberOfBatteries())
                        {
                            <MudSelectItem Value="i">@i</MudSelectItem>
                        }
                    </MudSelect>

                    @*<MudSelect T="Product"
                @bind-Value="this.Battery"
                ToStringFunc="e=>ProductToString(e)"
                Disabled=@IsUpsEmpty
                OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                Label="Batteries Brand">
                @foreach (var b in AllBatteries)
                {
                <MudSelectItem Value="b">@b</MudSelectItem>
                }

                </MudSelect>*@

                    <MudSelect T="int"
                           @bind-Value="this.BundleModel.Power"
                           Disabled="@IsUpsEmpty"
                           OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                           CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                           Label="آمپر">
                        @foreach (var i in GetPowers())
                        {
                            <MudSelectItem Value="i">@i</MudSelectItem>
                        }
                    </MudSelect>

                }

                <MudCheckBox @bind-Checked="HasCabinet">کابینت دارد؟</MudCheckBox>
                @if (HasCabinet)
                {
                    <MudSelect T="int"
                           @bind-Value="this.BundleModel.NumberOfBatteries"
                           Disabled="@IsUpsEmpty"
                           OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                           CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                           Label="مدل کابینت">
                        @foreach (var i in GetSupportedNumberOfBatteries())
                        {
                            <MudSelectItem Value="i">@i</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSelect T="int"
                           @bind-Value="this.BundleModel.NumberOfBatteries"
                           Disabled="@IsUpsEmpty"
                           OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                           CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                           Label="تعداد کابینت">
                        @foreach (var i in GetSupportedNumberOfBatteries())
                        {
                            <MudSelectItem Value="i">@i</MudSelectItem>
                        }
                    </MudSelect>
                }

                <MudCheckBox @bind-Checked="HasSNMP">کارت SNMP دارد؟</MudCheckBox>
                @if (HasSNMP)
                {
                    <MudSelect T="int"
                           @bind-Value="this.BundleModel.NumberOfBatteries"
                           Disabled="@IsUpsEmpty"
                           OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                           CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                           Label="مدل کارت SNMP">
                        @foreach (var i in GetSupportedNumberOfBatteries())
                        {
                            <MudSelectItem Value="i">@i</MudSelectItem>
                        }
                    </MudSelect>
                }

                <MudCheckBox @bind-Checked="HasParallel">کارت Parallel دارد؟</MudCheckBox>
                @if (HasParallel)
                {
                    <MudSelect T="int"
                           @bind-Value="this.BundleModel.NumberOfBatteries"
                           Disabled="@IsUpsEmpty"
                           OpenIcon="@Icons.Material.Filled.KeyboardArrowDown"
                           CloseIcon="@Icons.Material.Filled.KeyboardArrowUp"
                           Label="مدل کارت پارالل">
                        @foreach (var i in GetSupportedNumberOfBatteries())
                        {
                            <MudSelectItem Value="i">@i</MudSelectItem>
                        }
                    </MudSelect>
                }

                <MudButton Variant="Variant.Filled" Color="Color.Info" @onclick="Design">Design</MudButton>
            </div>
            @if (CabinetDesign.Length != 0)
            {
                <div class="bundle-container">
                    @foreach (var cab in CabinetDesign)
                    {
                        <div style="cursor:pointer" class=@((cab==SelectedDesign)?"selected":"") @onclick=@(()=>SelectDesign(cab))>
                            @*<div style="font-weight:bold">Design #@(i+1)</div>*@
                            <CabinetsComponent Cabinets=@cab></CabinetsComponent>
                        </div>
                    }
                </div>
            }
        </div>
    </DialogContent>
    <DialogActions>
        <div class="actions-container">
            <MudButton Variant="Variant.Filled" OnClick="AddDesign">Add @SelectedDesign</MudButton>
            <MudButton Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        </div>
    </DialogActions>
</MudDialog>